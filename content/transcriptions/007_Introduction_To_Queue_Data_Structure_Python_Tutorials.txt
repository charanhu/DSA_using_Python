 Hello guys and welcome to Python programming tutorials by Amoleus Academy. We were discussing about data structures and today in this tutorial we will discuss about Q data structure. Q is a linear data structure where the elements is inserted from one side and removed from the another side. Q will be open at both the ends. That's why insertion and removing elements is done in different ends. The end where elements are added is called as back, tail or rear of the Q. The end where the elements are removed is called as head or front of the Q. And Q follows FIFA or Lilo methodology. That is nothing but first in first out or last in last out methodology. Stack works on the LIFO right? Last in first out. But Q works on the FIFA methodology. First in first out. Q data structure works in the same way as the Q in the real world. If you stand in a line to buy a ticket or grocery or something, the first person in the line will be the first one to buy a ticket or grocery right? The last person from the Q will get grocery or ticket at last. Same is the case with the Q data structure. The element inserted first will leave the Q first. The element which inserted last will leave the Q at last. So I'll show you the example. Here we'll add the element 10. So here we can see the front and rear position. Both are equal now. I'll add another element 20. Here we can see the rear position. Next I'll add 30. Next I'll add 40. Next I'll add 50 like this. Here we can see right? Now if I want to remove the element, this removing the element is done in the another end. We added the elements in this end and we are removing the elements in another end. Here first 10 is removed because 10 is added first, 10 is inserted first to the Q. So 10 will be removed first. Next 20 will be removed. Next 30 will be removed. Next 40 will be removed. Insertion and removing of the element is done in the different ends. We can do this insertion and removing the element in another way also. For example here I'll change the front and rear position. And now we are adding the element in this end and we are removing the element from other end. You can take Q in this way also. Next the process of adding the element to the Q is called as NQ and the process of removing the element from Q is called as DQ. Next let's see the operation performed by the Q. In this stack it will perform push pop operation right? The most important operation of the Q is NQ and DQ. In the NQ it will add the element to the Q. In the DQ it will remove the element from the Q. And also you can perform easeful operation with the Q. That is to check whether Q is full or not. You can set the limit to the Q and you can see whether that limit is reached or not. So you can check whether Q is full or not. If Q is full you can't add more elements to the Q. In the same way you can check ease empty condition also. You can check whether the Q is empty or not. If you try to remove the element from the empty Q then you will get the empty Q message or under flow condition. And also you can check the element present in the front and rear operation. That is the next element which you want to remove from the Q. Without removing that you can see which element is that. And also the last element which you entered to the Q. Without removing that you can see which element is that. Alright so this is the operation of the Q. Next where we can use Q data structure. Q's are used whenever you want to process things one at a time as they come in. They first in first out. For example uploading bunch of photos, images, printing multiple documents or in the real life scenario call center phone systems uses Q's. Alright so this is about the Q and its operation. In the next tutorial we will see how to implement Q's in Python. So that's it for now guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you in next class. Till then take care.