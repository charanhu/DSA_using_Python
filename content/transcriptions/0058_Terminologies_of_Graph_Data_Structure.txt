 Hello guys and welcome to Amulya's Academy YouTube channel. We were discussing about graph data structure. Graph data structure is a non-linear data structure consisting of nodes and edges. In graphs, nodes are also called as vertices and a single node is called as vertex or node. Nodes are the data elements of the graph that are connected through edges. So the link or connection between any two nodes is called as an edge. So these are edges and edge can be unidirectional or bidirectional. If all the edges of a graph is unidirectional then that graph is called as directed graph or if all the edges are bidirectional in the graph then that graph is called as undirected graph and also edge can be associated with weight or cost. So that type of graph is called as weighted graph. So we discussed about these different types of graph in the previous tutorial. I will give you the link of that video in the description box. So edge can be unidirectional, bidirectional or it can be associated with the cost or weight. Now next let's talk about few more terms related to graph and the first term is called as adjacent nodes or neighbor nodes. A node x is adjacent to node y if there is an edge from node x to node y. If there is an edge from one node to another node then that two nodes are adjacent nodes. For example here A and B are adjacent nodes. A is adjacent to B, B is adjacent to A because here we can see there is an edge from A to B and B to A. But in the directed graph for example here there is an edge from A to B but there is no edge from B to A. That's why A is adjacent to B, B is adjacent from A in directed graph but in the un directed graph edges are bidirectional. So here A and C are the adjacent node, A is adjacent to C, C is adjacent to A. This is about the adjacent node. Next term is path. Path is a sequence of vertices such that from each of its vertices there is an edge to the next vertex in the sequence or in simple words it is the sequence of vertices and in that sequence of vertices each adjacent pair of vertices is connected by an edge. For example here I will show you a path from A to G, A to C, C to F, F to G. So the path is here A, C, F, G. So this is a path. Path is nothing but sequence of vertices. Here A, C, F, G are the vertices and also pair of adjacent vertices need to be connected by the edges. Here A and C is connected by the edge, C and F is connected by the edge, F and G is also connected by an edge. And we can have multiple paths from one node to another node. For example if I want to go to A to G this is one path and this is another path right. So we can have multiple paths from one node to another node. But if I want to find out the length of path then I need to count the number of edges present in that path. For example length of this path is 3 because number of edges included here is 3 and length of path should be always equal to or greater than 1 that is it can't be 0 because if length of path is 0 that means there is no edge present in that path. If there is no edge present in the path means only one node is present in the path and path is the demoed sequence of nodes. So if only one node is present that is not called as path. So that's why length of path should be greater than 1 or equal to 1. Next we have different types in path that is first term is simple path. A path is simple if all of its vertices are distinct. If you have different vertices in the path then that path is called as simple path. For example this path is a simple path because here vertices are not repeating right. But here we can see another path in this path vertices are repeating because of that edges also repeating that's why this is not a simple path. This is a path but this is not a simple path. In simple path all the vertices need to be distinct. Alright so next we have closed path. A path is closed if the first and the last node of that path is same. For example here we can see a path. Here the first node and the last node of path is same that's why this is closed path. What do you mean by closed? The starting point ending point should be same right here also. In the closed path the first node and last node should be same. But in the middle vertices can be repeated here in the closed path. For example this path this is also a closed path. Even though here vertices and edges is repeating this is a closed path. Next term is cycle. So we discussed about this in the previous tutorial but in that I didn't give a proper definition for this term. Cycle is also a path in which the first node and last node need to be same and also all the other nodes need to be distinct. It is like closed path but the difference is in the closed path we can have duplicate vertices. Vertices can be repeated in the middle right but in this cycle except the first node and last node vertices need to be distinct. So here this is a cycle because here we can see first node and last node is same and all other nodes are not repeating. But this is not a cycle. Actually this term is called as simple cycle or cycle. So when we say cycle here we are giving the definition for simple cycle. And also as I explained in the previous tutorial if a graph contains a cycle then that graph is called as cyclic graph. If a graph doesn't have any cycle in the graph then that graph is called as a cyclic graph. Alright. So this is about the few terms related to path. Ok so next let's talk about the connectivity of the graph. Connectivity is an important factor in the graph. A graph is said to be connected if there is a path between every pair of vertex. Every pair of node. In other words there is a path from any node to any other node. In the graph any node is reachable from any other node. For example this is a connected graph because here we can see we can reach any other node from any node. For example if I want to go to G from A I can go here. There is a path between A and G. There is a path between A and B. There is a path between E and A. So all the nodes are connected. There is a path between every pair of nodes. That's why this graph is called as connected graph. Now if I remove this edge here like this. Now this graph is not connected. Because here we can see we can't go from A to C or B to C. D to C right. There is no path from A to C or B to C. D to C. That's why this graph is not connected. Here this graph is connected because here we can reach any node from the any other node. But here this graph is not connected graph. Here we can see we can't reach from C to E or C to F or D to E. D to F like that right. So that's why this is not a connected graph. So by looking at the graph you can say whether it is connected or not connected. And actually we'll use this term connected with the undirected graph. In the directed graph we'll use strongly connected graph and weakly connected graph. So next let's talk about that. Let's see what is that. First is strongly connected graph. A diagram that is the directed graph is strongly connected. If there is a directed path from any node of the graph to any other node. So the definition is same as connected graph definition. We need to have a path from any node to any other node. But because the diagram is the directed graph we need to be little more careful. It is unidirected right. That's why. So I'll show you an example for strongly connected graph. Here I have a graph like this and this is a strongly connected graph. Because here we can see there is a path from A to B. I can go to C from A, A, B, C like this. I can go from C to A like this. I can go from B to A like this, B to C, C to A. So there is a path from any node to any other node. That's why this is the strongly connected graph. Now coming back to the next term which we use in the directed graph is weakly connected graph. A directed graph is weakly connected. If for any pair of node you add V. There is a path from you to V or V to you. So little bit confusing right. A directed graph is said to be weakly connected. If I treat that graph as the undirected graph then it should be connected. Here you can see this is not a strongly connected graph. Because I can go from A to B but I can't go from A to C because there is no path here. So that's why this is not a strongly connected graph. But why this is weakly connected graph? That is because now if I treat this as the undirected graph that is if I just remove this direction then now this is the undirected graph. Now this is connected right. I can go from A to B A to C through A B C path. I can go from C to A through this path. Now this graph is connected. So when I see a weakly connected graph as undirected graph if it is connected then that graph that directed graph is called as weakly connected graph. If you want to check whether a directed graph is weakly connected or not what you need to do is first you need to look it as a undirected graph. Then you need to check whether that graph now is connected or not. If it is connected then this graph is weakly connected. Okay so let me show you another example. This is weakly connected graph because I can't go from A to B. Here you can see A to C, C to D but I can't go to B. So that's why this is not strongly connected graph. Now why I am saying that this is weakly connected graph that is because if I remove this direction if I treat this as an undirected graph then this is a connected graph right. Now for example if I just remove direction now it will become undirected graph and it is a connected graph that's why this is weakly connected graph. Cool right. This is strongly connected graph. Why? Because we have a path from any node to any other node here. I can't go from any node to any other node. For example A to E here is a path A, C, D, B, E. Okay you can check that from D to E, D, B, E there is a path. So that's why this is a strongly connected graph. I hope now you are clear with the terms connected graph strongly connected graph weakly connected graph. So this is about the connectivity of the graph. Next let's talk about the degree of a node. In an undirected graph the number of edges connected to the node is the degree of that node. For example here this is an undirected graph here the degree of A is 3 because the edges are connected to it right. Degree of C is 3. Degree of B is 1. Degree of D is 1. Degree of a node is nothing but number of edges connected to it. But in the die graph in the directed graph we will use in degree and out degree. Okay so here we have an directed graph. In the directed graph we will use terms as in degree and out degree. The in degree of a node is the number of edges coming to that node. For example here degree in degree of A is 1 because this edge is coming to this. Here for B3, in degree is 3. Out degree is the number of edges going outside from that node. So for example here for A, out degree is 2. For B, out degree is 0 because there is no node going outside from this node. So degree of a node is nothing but the number of edges connected to that node because there is an direction for edge in the directed graph. There are 2 degrees for every node in degree and out degree. Alright so this is about the degree of the node. Next. And now the last term is complete graph. A graph is complete if any node in the graph edges side to all the nodes of the graph. Or we can say there is an edge between every pair of nodes in the graph. If I have a graph like this, if there is an edge between every pair of node in the graph then that is called as complete graph. Now don't get confused with the complete graph and connected graph. This is a connected graph but this is not a complete graph because there is no edge between AD and BC, BD. That's why this is not a complete graph. This is a connected graph but this is not a complete graph. To become a complete graph there should be an edge between every pair of node in the graph like this. Now this is a complete graph. In the directed graph also we can have complete graph like this. So these are the few terms related to graph. I hope I cleared all your doubts if you have any doubts. You can mention that in the comment section. So that's it for now guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you in next class till then take care.