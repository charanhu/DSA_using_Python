 Hello guys and welcome to Python programming tutorials by Amalia's Academy. We were discussing about data structures and in the previous tutorial we discussed about built-in data structures. Next we will discuss about user-defined data structures. So today in this tutorial we will discuss about stacks. Stack is an ordered collection of items where the addition of new items and removal of items always take place at the same end. So this end is called as top and the opposite end is known as base. Stack stores the item in last in first out or first in last out manner. Stacks stores the data element in similar fashion as the bunch of plates that are kept one above the another in a kitchen. You will place the plate one first right at the bottom. After that you will place the second plate plate two at the top of the plate one. Next you will plate the plate three. Next you will plate plate four. Next you will plate plate five like that right. But while removing the plate first you will remove the last kept plate right. After that you will remove the next plate. At last you will remove the plate one that is the plate which you kept first. So this is the last in first out or first in last out. You can take this as a bucket okay we have a bucket here. Now you need to add the item to this bucket. First I'll add a object like this. I'll keep this here. Next I'll add the second object. It will be placed above that. Next I'll add this object third object. It will be placed at the top of that right now while removing the object first I need to remove this third one. Next second one next first one right. So this is the last in first out principle and stack works based on this concept. Now let's see the basic operation performed by the stack. The first operation is push second operation is pop third operation is peak or top and the fourth operation is empty. Push operation adds the element to the stack. If you want to add the element to the stack you need to use the push operation. Pop operation will remove the element from the stack. Peak or top will give you the element which is present at the top. And ease empty is nothing but which will tell you whether stack is empty or not. So in this operation push and pop operation is very important. So I'll explain you this to operation with example. So first let's talk about the push operation. So as I said push operation allows us to add the element to the stack. So let's take the example for this. Let's take an editing file example using the undo features. Alright, so I'll take a Python file here and in the Python file I have a print function and I have few statements. Okay. Now if I want to remove any word from here, for example, I'll remove this word about. Okay. When I delete this now about word will be added to this stack using push operation. Next I'll delete app. Okay. Now I will be added to this stack using push operation. Next I'll remove V. Now we is added to this stack using the push operation. Right. So this is about the push operation which allows us to add the element to the stack. Now let's talk about the pop operation which is also very important operation. In the pop operation it will allow us to remove the element from the stack. So when I use control Z now that is the undo operation first the element which we deleted last that is we will be removed first. So when I press control Z here we here we can see V is appeared here first. Okay. From this stack V is removed first. Next if I again press control Z here we can say am is removed. Now again I press control Z about is removed. So these elements are removed from the stack using pop operation. So this is the last in first out or first in last out concept. So next let's see the application of stack. Stacks are considered as the backbone of data structure. You can use stacks to reverse a string. Each of the characters are pushed in and then popped off. So which results in the reverse string as I said it will give first in last out. Right. So we'll get this thing in the reverse order. Also it is used in expression evaluation and expression conversion. In fixed to post fix in fixed to prefix post fix to infix prefix to infix like that. It can be used for forward and backward features in web browsers. It is used in algorithm like tower of Hanoi. Okay. So this is about the stacks and how it works. Next how to implement stacks in Python in Python stack is not in built data structure. Right. It is not a built in data structure like list. So we need to implement that in the Python then how to do that that we'll discuss in the next tutorial. So that's it for now guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you next class till then take care.