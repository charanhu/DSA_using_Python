 Hello guys and welcome to Python programming tutorials by Amoleas Academy. We are discussing about data structures and next in this series we will discuss about tree data structure. When I say the word tree, what is the first thing comes to your mind? A tree, right? With leaves, branches, fruits, flowers, trunk, roots, etc. But today we are not talking about these three. We are talking about tree data structure. Tree is a non-linear data structure which represents the relationship between the different nodes. In the previous tutorial we discussed about linear and non-linear data structures. If the data structure arranges or organizes the data linearly or sequentially, then those data structures are called as linear data structure. Stack Q-linker list comes under this category. If data structure organizes the data non-sequentially, non-linearly or hierarchically, then that data structure is called as non-linear data structures. And tree and graft comes under this non-linear data structure category. I hope you heard about family tree. We all have different generation in our family. You can represent these generations or the relationship of the family hierarchically using family tree. So first there will be grandparents, grandmother or grandfather, the root of your family and you have the second generation, next generation like that. You can represent this different generation hierarchically using family tree. Also an organization structure is another example for hierarchical structure. So these are the real world examples where you can arrange or organize the data hierarchically. Now coming back to the trees, we know tree is a non-linear data structure and which will represent the relationship between the nodes. And you can define the tree in another way also. Like tree is the collection of entities called nodes and every nodes are connected by edges and each node of the tree contains the value or data and it may or may not have children. Okay. So you may not be familiar with few terms of this definition. Don't worry, we'll see that later. For now just remember that tree is the non-linear data structure and it is the collection of entities called nodes. And every node contains the value or data and also it contains the link or reference to other nodes called children. We can represent tree like this. As I said tree is the collection of nodes. So here you can see these are the nodes and these nodes are connected by edges. So this is called as edge or link. And here every node contains the data or value and also it contains the link to other nodes. Here you can see this is a node and it can contain data or value. Now I didn't mention any data here. It can contain any type of data. Now to understand trees better, you need to be familiar with the terminologies of tree. The terms used with tree. So let's see the tree terminologies. The first term is node. The individual element of tree is called as nodes and every node contains data or value as well as link to the other nodes. And the next term is root node root. The topmost node of the tree is called as root or root node. We can say that the root node is the origin of the tree data structure. In any tree there must be only one root node and we never have multiple root nodes in our tree. And the next term is edge or link. This is the link or the connection between two nodes. So here whatever mark in the yellow color, these are called as edge. This, this, everything is called as edge or link. The next term is parent node or parent. The node which has a branch from it to any other node is called as parent node. Here you can see this is the node which contains branch or edge from this node to another node. So this is the parent node of these two nodes. And this node is the parent node of these two nodes. And this node is the parent node of these two nodes. And this is the parent node of this node and this is the parent node of these three nodes. Here you can see the nodes which are highlighted are called as parent nodes. Parent node can also be defined as the node which has child or children. So the next term is child. The node which has a link from its parent node is called as child node. So here this was the parent node of these two nodes. That means these two nodes are the child of this node. This is the child of this node. And also a node can contain any number of children. And in a tree all the nodes except root node are the child nodes. And all the node except root node will have a parent node. And here you can see the highlighted nodes these are the child node. And the next term is siblings. These nodes which belongs to same parent are called as siblings. Here this node and these nodes are siblings because both node parent is same. Here this node and these nodes are siblings. This node and this node are siblings. The nodes with the same parents are called as sibling nodes. So here you can see the highlighted nodes. These are the sibling nodes. And the next term is leaf node or leaf. The node which does not have a child is called as leaf node or it is also called as external node. External node is also a node with node child. So if a node does not contain a child then that node is called as leaf node or external node also it is called as terminal nodes. Here in the example these nodes are called as leaf nodes or external nodes. Next we have internal nodes. The node which has at least one child is called as internal node. Intradator structure other than leaf node all other nodes are the internal nodes. Root node is also an internal node. So here these nodes these nodes these nodes these nodes are all internal nodes. And the next term we have is path. The sequence of nodes and edges from one node to another node is called as path between two nodes. For example the path between this node and this node is if I take here values some A, B, C and D then the path between A and D is A, B, C and D. It is the sequence of node and edges. Three edges and four nodes. So these are the few basic terms which are used with tree data structure. We talked about root edge parent child leaf node internal nodes siblings and path. And also the terms which we discussed here we are familiar with all of them or most of them. We will use these words in real world right siblings parents child will use this relation in our daily life also. That's why you can remember these terms easily and you can understand trees more easily. This is about the tree data structure introduction to tree. So that's it for now guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you next class till then take care.