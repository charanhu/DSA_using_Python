 Hello guys and welcome to Amulia's Academy YouTube channel. We were discussing about data structure and today in this tutorial we will discuss about binary heap data structure. heap is a specialized tree based data structure and there are several variants of heaps like binary heap, binomial heap, fibnoc heap. But here in this series we will only talk about binary heap. Okay, so next let's see the definition of binary heap. binary heap is a complete binary tree that satisfies heap property. Complete binary tree with the heap property is called as binary heap. So this definition contains two parts. The first one is the tree must be a complete binary tree and second one is it need to satisfy heap property. First, let's see what is complete binary tree is. We already discussed about this while discussing about types of binary tree. So I won't explain you about this in detail here but I'll just refresh your memory. Complete binary tree is a type of binary tree in which all the level except last level is completely filled with the nodes and in the last level it can be filled with nodes completely or nodes need to be filled from left to right or all the nodes as left as possible. Okay, so this is the definition of the complete binary tree. So let me show you a few examples of complete binary tree. Here this is a complete binary tree because this is completely filled in every level and this is also a complete binary tree because here we can see all the level except the last level is completely filled and in the last level node is filled from left to right. Here at the left most side we have a node. So this is also a complete binary tree. Now coming to this example here we can say this is not a complete binary tree. Here all the levels except the last level is completely filled but in the last level nodes are not filled from left to right. Here we can see this place is empty, right? That's why this is not a complete binary tree. Coming back to this here we can see in this tree all the levels are not completely filled. This level is completely filled, this level is completely filled but this level is not completely filled and this is not the last level. That's why this is not the complete binary tree. I hope you remember now what is complete binary tree and its property. If you want the detailed explanation then I will give you the link of that video in the description box you can go and check out that. Now coming back to the definition binary heap need to be a complete binary tree. First part of the definition and the second part is it need to satisfy the heap property. Now what is this heap property? Let's see that, okay? heap property is a property of a node in which key of each node is always greater than or equal to or lesser than equal to its child nodes. Here also we have two options. Either parent node key can be greater than or equal to the child node or parent node key can be lesser than or equal to the child node. If you have a complete binary tree where the key of every parent node is less than or equal to its child node then that is called as min heap and if you have a complete binary tree where every parent node contains the key greater than or equal to the child node then that is called as max heap. A binary heap is either min heap or max heap. In min binary heap the key at root must be minimum among all the key present in the binary heap and the same property must be recursively true for all the nodes in the binary tree. In the max heap the key of the root node is the maximum among all the keys present in the binary heap and the same property must be recursively true for all the nodes in the binary tree. So here you can see the definition of min binary heap and max binary heap. So now let me show you a few examples. First let us start from the max binary heap max heap. So here the key of the parent node should be greater than or equal to the child node. So here we can see this is the parent node of these two nodes these are the child nodes and here you can see its key is greater than its child node and if I come here 50 it is 30 and 20 okay and also you can see this is a complete binary tree that is why this is the max binary heap. Now if you want to check whether tree is a binary heap or not first you need to check whether it is a complete binary tree. After that you need to check the heap property whether it satisfies the heap property. Here it satisfies the heap property that is why it is a binary heap. It is a max binary heap. This is another example here you can see 500, 170, 30, 80, 20, 50. Now these are minimum heap, min binary heap. Here you can see the root node key is the smallest among all the nodes key. It is 4 and 10, it is 70 and 100. Here also I hope now you are clear with the binary heap concept and max binary heap and min binary heap. So let me take few examples here. In this here we can see in this site these are the max or min binary heaps and these are not. All right now why binary heap? Where I can use binary heap data structure. We can use binary heap data structure to implement priority queues and also you can use this in the heap sort because heap sort uses binary heap to sort the elements and also to find the kth largest or smallest element in the array you can use this binary heap data structure. All right so this is about the binary heap data structure. If I want to see the summary of today's tutorial first we discussed about heap and its different types in that we are discussing about binary heap here and binary heap is a complete binary tree with the heap property. So we discussed what is complete binary tree and heap property and binary heap either is a min heap or max heap. So we have two types of heap, min binary heap and max binary heap and we saw the example for that and also we saw where we can use binary heap. So this is about the today's tutorial. So that's it for now. In the next tutorial we will discuss about the operation of binary heap data structure. So I will meet you in the next class. Don't forget to subscribe to my channel. Take care.