 Hello guys and welcome to Python programming tutorials by Amulya's Academy. We were discussing about data structures and in that we were discussing about tree data structure. And in the previous tutorial we discussed about definition of tree and also terminology of tree, terms related to tree. Today in this tutorial we will continue the discussion on tree data structure. First we will talk about the characteristics of the tree data structures. Or we can say few truths related to trees. Every tree has a special node called root node. The root node can be used to traverse every node of the tree. It is called root because tree originates from the root node. If we have non-empty tree then that tree must contain the root node. And the second property or characteristics of tree is, if tree contains n nodes then the number of edges is always one less than the number of nodes. That is nothing but if we have n node we will have n minus one edges or links. Here we can see in the diagram we have total 11 nodes and the link or edge we have is 10. So here you can see 1, 2, 3, 4, 5, 6, 7, 8, 9, 10. If we have n nodes we will have n minus one edges. That is because here we can see we don't have any link or edge to the root node. That is why we have n minus one edges. Next every child node has only a single parent but parent can have multiple child. This child node contains only one parent. Every child node contains only one parent but a parent can have multiple children like this. Here you can see this node contains two children. And the next property is trees actually contains trees within them. That means trees are recursive data structures. A tree is usually composed of smaller trees and they are called as subtrees. The child of one node in a tree can be the parent of another tree making it the root of the subtree. So here you can take like this. This is the left side nodes. This is the right side nodes. So here you can take this as a subtree. And here for this subtree this is the root node. And here also you can take this for this subtree. This is the root node. All right. So these are the few characteristics of the tree or truths about the trees. Next to understand trees better we need to be familiar with few other terms or properties of trees. In the previous tutorial we discussed tree terminology and in that we discussed about basic terms related to tree data structure. Today we'll discuss few more terms. The first term is called as degree. You can find out degree of a node as well as degree of a tree. So first let's see what is degree of a node. Degree of a node is the total number of children of that node. So now here I'll just take name for every node. Instead of calling this node that node I'll give name to the node to identify the nodes here. Okay. Well explaining instead of calling this node and that node I'll call node a node b node c like that. Now if I want to find out the degree of node b I need to find out its number of children. So here we can see b contains two children that is nothing but degree of b is two. Now if I want to find the degree of g node g then it contains three children so degree is three. Degree of node is nothing but the number of children of that node. Now coming to the degree of a tree. If I want to find out the degree of tree then it is the highest degree of a node among all the nodes in the tree. So if you want to find out the degree of tree then first you need to find out the degree of all the nodes and the node which contains highest degree that is the degree of entire tree. For example here degree of a is two. Node b is two, c is two. Right? D is zero. E is one. F is zero. G is three. H and I and J and K all are zero. So the highest degree is three. So the degree of this tree is three. The highest degree of a node is three. So degree of tree is three here. And also you can observe one more thing. Degree of leaf node is zero. So this is about degree. You can find out degree of a node and degree of a tree. So the next term is level. I want to find out the level of tree. In a tree each step from top to bottom is called as level of tree. The level count start from zero and increments by one at each level or step. So here it will start from top. So this is the level zero level one level two and level three. So the level of tree is three. If you want to find out the level of C that is one zero one two three. And the next term is height. Here you can find out height of node as well as height of a tree. So first we'll see what is height of a node. Height of node is the total number of edges that lies on the longest path from any leaf node to a particular node. For example, if I want to find out the height of C. First I need to find out the longest path from the leaf node to C. Here we can see these are the leaf nodes. And here the longest path is you can take this path this path or this path. We have three paths which are the longest path for C from the leaf node. And the number of edges included in that is two. That means height of C is two. If I want to find out height of B. This is the longest path from any leaf node to B. So here number of edges is two. So B is two. For A, this is the longest path or this or this. You can take any path and number of edges is three. So for A it is three height of A is three. You need to calculate from the leaf node. You need to find out the number of edges present in the longest path from the leaf node to that mentioned node. And now what is the height of a tree? Height of three is equal to height of the root node. So here in this example height of A that is the root node is three. So height of this tree is three. All right. You need to find out the longest path and you need to count how many edges are present in that. Okay. So this is about the height. Next term is depth. I want to find out the depth of a node as well as depth of a tree. So let's see what is that depth of a node is nothing but total number of edges from root node to a particular node. For example, if I want to find out the depth of C, then I need to find out the path from root to that node. So for example, if I want to find out the depth of C, so path is A to C. Right. And then I need to calculate number of edges present in that. So here it is one. So, so depth of C is one. If I want to find out the depth of H, first I need to find out the path that is A, B, E, H. We need to start from root. Next, calculate the number of edges present in that one, two, three. So depth of H is three. So that means depth of A is always zero. Just remember height of leaf node is always zero. Depth of root node is always zero. If you want to find out the height, you need to calculate the edges of longest path from the leaf node to the particular node. If you want to find out the depth, then you need to start from the root node. You need to calculate the number of edges from the root node to the particular node. Now, if I want to find out the depth of tree, then how to find out that depth of tree is nothing but total number of edges present. So, here is the number of edges from root node to a leaf node in the longest path. So, if I want to find out the depth of tree, you need to take the longest path from root node to leaf node. So, here A, B, D and here we have A, B, E, H, here A, C, F, here A, C, G, K, A, C, G, J, A, C, G, I. We have these many paths. We have four longest paths. The number of edges are equal. So, three is the depth of this tree. Okay. So, these are the few important terms related to tree data structures. Today we talked about degree, level, height and depth. And next, let's see the application of tree data structure where we can use tree data structures. So, binary search trees, it is an type of tree is used to quickly check whether an element is present in a set or not. So, for searching purpose, binary search trees are used. Heap is a kind of tree that is used for heap sort. A modified version of a tree called trace is used in modern routers to store rooting information. And also, let's see the different uses of tree while discussing about different types of tree. So, that's it for now guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you in next class. Till then, take care.