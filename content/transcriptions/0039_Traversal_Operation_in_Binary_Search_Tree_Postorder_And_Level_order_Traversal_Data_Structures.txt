 Hello guys and welcome to Amalia's Academy YouTube channel. We were discussing about binary search tree operations and in that we were discussing about traversing operation. In the previous tutorial we discussed about two traversal algorithms that is pre-order traversal and in order traversal. Today in this tutorial we will discuss about two more traversal algorithms and in that first one is post-order traversal algorithm. So first we will talk about that. To traverse a non-empty binary search tree in post-order we need to perform the following operations recursively at each node. So in the post-order traversal first you need to visit left subtree, all the nodes of left subtree. Next you need to visit right subtree and lastly you need to visit the root node. First you need to traverse the left subtree. Next you need to traverse the right subtree. Next you need to visit the root node. In the previous tutorial I gave you a tip on how to remember the left subtree, right subtree and root node order in different algorithms. Initially we will write down like this left subtree root and right subtree. If root is visited first then that is pre-order traversal we need to visit root left right. If root is present in the middle of left and right that is in order and here in the post-order post means after right. So after visiting left subtree, right subtree if we visit root node, if we visit root node at last after visiting left and right subtree then that is post-order traversal. It is just a small tip to remember the order of nodes. Now if I have like this 10 and 100, here you need to visit first left subtree that is 10. Next you need to visit right subtree that is 100. Lastly you need to visit root. This is the order. In the post-order traversal algorithm. Next without wasting any time let's move on to the example. Now here post-order traversal. In the previous tutorial we saw how we can traverse this binary search T using pre-order traversal algorithm and in-order traversal algorithm. Next we will see how to traverse this using post-order traversal algorithm. So in the post-order traversal algorithm left right root. So we need to start from left. So here this is the left subtree of root node. This is the right subtree because I need to start from the left subtree so I need to start from here and here in this left subtree this is the root node this is the left subtree this is the right subtree. So we need to start from the left subtree that means I need to visit these nodes first and in this subtree this is the left subtree this is the root node this is the right subtree and because these two are the leaf nodes so here we need to start from here left subtree so 3. Next I need to visit right subtree so 7. Next I need to visit root. So left subtree is done here. Now I need to visit right subtree that is 12. So 10. Now left subtree is completed here this now right subtree I need to visit right subtree so 2530. After that I need to visit the root node that is 21. So this is the order of key when we visit this binary search key using post-order traversal algorithm. I hope you don't have any doubt here we need to visit left subtree right subtree next root node. Let's take one more example. Here we can see this is the pre-order traversal and this is the in order traversal of this binary search tree. Next we will do post-order traversal in the post order traversal. Let's start from the left subtree. This is the left subtree this is the right subtree and this is the root node and in this left subtree this is the left subtree this is the right subtree this is the root node because I need to start from left subtree so here first I need to visit these node so So here 1, 9, 7. So left, right, root, node. Now we completed this. Next we need to traverse the right subtree. So 20. Next root node, that is 10. Next left subtree is completed. So we need two towers, right subtree. So here 40, 150. 40, 150. Now left subtree is completed. Right subtree is completed. Next root node. So 30. So this is the order of nodes. When we are performing the post-order traversal, start from the left subtree, visit all the nodes of the left subtree. Next go to the right subtree. Next root node. All right. We need to perform the operation recursively at each node. All right. So this is about the post-order traversal. All right. So next let's talk about another traversal algorithm, that is level-order traversal algorithm. In the level-order traversal, all the nodes at a level are accessed before going to the next level. That is, we are visiting the nodes level-wise. First we'll begin from level zero. We'll complete all the nodes of level zero. Next we'll go to the level one. Next we'll go to the level two like that. So we are visiting the nodes level-wise or level-order. That's why it is named as level-order traversal. Here we are not traversing like left subtree, root node, right subtree. No. Here we are visiting the nodes based on the level. First we'll complete first level of the level zero. Next level one, level two, level three, like that. If I have a BST like this, so first I'll visit level zero, all the nodes of level zero, 30. Next level one, this level, 10 and 50. Next last level, 40. We'll perform the level-order traversal like this. Let's take an example. I have pre-order in-order, post-order. So let's perform level-order traversal. So I need to start from level zero, the first level. So 21. Next 10 and 30. Next 512, 25, 103 and 7. In the level zero, we have 21. And in the level one, we have 10 and 30. So 10 and 30. Next in the level two, we have 512, 2500. Right down that. Next in the last level, we have three and seven. Right down that. If you want to perform the level-order traversal, you need to visit the node level wise. Let's take another example here. I need to start from 30, 10, 57, 20, 40 and 100, and one and nine. All right, so this is about the four different traversal algorithm. So here is a small summary. Here you can see two binary search tree. You need to traverse this using level-order and post-order traversal algorithm. Pause this video and write down the nodes order. And this level-order traversal is also called as breadth-first traversal algorithm. All right, so this is about traversing operation in binary search tree. How to traverse a given binary search tree? So that's it for now, guys. Thank you for watching. Don't forget to subscribe to my channel. I will meet you in next class till then. Take care.