 Hello guys and welcome to Python programming tutorials by Amulya's Academy. We were discussing about data structures and in the previous tutorial we discussed about Q and its operation and today in this tutorial we will see how to implement Qs in Python. So we can implement Qs in two ways. One is using list and another one is using the classes of different modules. Today we will discuss about how we can implement Q using list and in the next tutorial we will talk about the second option. So Q works in the first in first out order and the two important operation of Q is NQ and DQ. NQ is nothing but adding the element to the Q. DQ is nothing but removing the element from the Q. And one more important thing, Q will be open at both the side. That's why the insertion and removing the element is performed in different ends. First entered element will be removed first. Alright so this is about the Q summary. So next we will see how to use list as Qs. For that for NQ operation we can use the append operation so it will add the element at the end of the list or Q. And for DQ operation that is to remove the element from the Q we can use pop method. For NQ we can use append method for DQ we can use pop method. In the previous tutorial while implementing this tag using list also we used same method right append will add the element at the end and pop will remove the element from the end. So if I use append and pop then it will create a stack right but here we want Q. In the Q the operation that is insertion and removing the element is done in the different ends. So for that in the pop we need to mention the index of the element that is nothing but zero index. We don't want to remove the element from the end. We want to remove the element from the front. So this side right so that's why we need to use pop of zero. So I will show you the example then you will understand this. So to create a Q first empty Q you can create an empty list like this. Next to add the element now what you need to do you need to use append. For example I will append 10 ok done. So now if you want you can check the Q right next next I will add 20 next I will add 30. Now if you want to check Q here we can see 10 20 30 elements are added like this. Now if you want to remove the element from the Q that is if you want to perform the Q operation then you need to use Q dot pop and you need to mention the index here zero index. Remove from the front if I didn't use any index it will remove the element from the end then it will create a stack we don't want stack here we want to perform insertion and removing the element in different ends. Here we entered the element in this side now we need to remove the element from this side. So now if I enter this here we can see first 10 will be removed the first entered element is 10 right here we can see and the first removed element is also 10. Now again if I use this 20 will be removed if I again use this 30 will be removed if I again use that it will give a error message pop from empty list ok. So in this way you can use the append method and pop method to perform NQ and DQ operation. You can perform this operation in another way also as I explained you you can insert the element in another side and we can remove the element in another side that is the limit you can insert the element from this side and you can remove the element from this side. For the NQ operation you need to use insert method insert and here you need to mention the index at zero index you want to enter and here you can enter the element for example here. Next here I will enter 20. Next here I will enter 30. So now if I chuck Q here we can see 30, 20, 10 the elements are entered like this. Now if you want to remove this you can use the pop method pop method will remove the element from the end. So you enter the element in this side right now you can remove the element from this side using pop. No need to mention the index just mention pop it will remove 10 first the first entered element is 10 so first remote element is also 10. 20 30 ok. So in this way you can perform NQ and DQ operation. Next if you want to chuck whether this is empty or not you can use not Q it will give true. So here not Q here we can see Q is empty that is nothing but false right when I take not Q not Q means it will become true it is empty if you take it with the if condition then you will understand that and also if you want to see the element present in the rear side and the front side for example I will take few elements ok. Now to chuck the element present at the rear side and front side you can use Q of if I chuck minus 1 will get 30 the last entered element and now if you want to chuck the next element which you are removing without removing that then you can use Q of 0 that is 10. This is present at 0 index. So I will show you this NQ, DQ and E is empty condition with a complete example. So here we have a program I am not writing this program because it is a lengthy program and it will take time but I will explain you the program here first initially I will take Q is a empty list fine these are the function definition about this I will explain you later. First here we can see while 2. Here we are asking the user to select the operation whether he want to add the element remove the element whether he want to see the Q or quit the program. We will ask the user to enter that choice here it is just up statement so user will enter choice here and that will be stored in the variable choice. Next we are using if-elif condition if-elif else condition and we are checking if choice is 1 that is nothing but adding the element so I will use NQ function we already defined that function here so I will explain you about that and if choice is 2 then DQ function here you can see the DQ function definition and next if choice is 3 then display the Q so you can call this function display function and if choice is 4 that is nothing but if you want to quit the program then I will use the break statement. Why break statement because here we can say I took these condition in a while body and else condition is enter the correct operation if you enter something else from 1 2 3 4 then it will print this message. Why I am taking this in the while condition that is because I want this to be executed again and again until I want to quit so this body of while will be executed continuously until I want to stop the execution until I choose this option 4 while true means always true. So next coming to the NQ function here in the NQ function we are adding the element so here inside this we will ask the user to enter the input enter the element and we will store that in the element variable and using append function we will add the element and next here element is added will print a message. Next in the DQ first we will check whether Q is empty or not if Q is empty will print this message otherwise we will pop the element using index 0. Next it will print the removed element also. Next here in the display we are just printing the Q that is it. Ok so this is about the program so let's execute this. So select the operation if I select 3 it is just an empty 2 it will print Q is empty. If I take 1 it will ask us to enter the element again 1 I will enter 20 again 1 I will enter 30 done. Now if I want to remove this plus 2 then it is removed and again I will press 2 20 is removed 30 is removed if I again press 2 it will print Q is empty. Now if I want to show this I can use 3 it is an empty right if I want to add 1 add 2 add 3 and if I want to display use 3 it will print that if I want to quit use 4. So in this way this program works. So this is about how we can implement Q using list. So that's it for now guys thank you for watching don't forget to subscribe to my channel I will meet you next class till then take care.